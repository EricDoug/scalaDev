第 10 章  组合与继承
抽象类，
无参数方法，
扩展类，
重写方法和字段，
参数化字段
调用超类构造器
多态
动态绑定
finnal成员
类
工厂对象和方法
10.1 二维布局库
建立一个创建和渲染二维布局元素的库。
每个元素将显示一个由文字填充的矩形。
该库提供名为"elem"的工厂方法来通过传入的数据构造新的元素。
elem(s : String) : Element

val column1 = elem("hello') above elem("***")
val column2 = elem("***") above elem("world")

10.2 抽象类
抽象类可能有未实现的成员，因此不能实例化。

10.3 定义无参数方法
访问字段比调用方法略快，因为字段值在类初始化的时候就被预计算，而
方法调用在每次调用的时候都要计算。

永远不要定义没有括号的带有副作用的方法，因为那样的话，方法调用看上去
会像在使用字段，所以你的客户会很奇怪为什么它带有副作用。

无论何时当调用有副作用的方法时应确保包含一对空括号。

如果你调用的函数执行了操作就使用括号。

10.4 扩展类
继承：
a.超类的私有成员不会被子类继承。
b.超类中成员若与子类中的实现的成员具有相同的名称和参数不会被子类继承。--重写

10.5 重写方法和字段
scala里禁止在同一个类中用同样的名称定义字段和方法，而JAVA允许这样做。
scala把字段和方法放进同一个命名空间中。

10.6 定义参数化字段
参数化字段（parametric field）
参数化字段可以是private,protected,override.

10.7 调用超类构造器

10.8 使用override修饰符
scala要求,若子类成员所有重写了父类的具体成员则必须带有override；若成员实现的是同名的抽象成员时，则这个修饰符是可选的；
若成员并未重写活实现什么其他基类里的成员则禁用这个修饰符。

10.9 多态和动态绑定
多态（polymorphism）

10.10 定义final成员

10.11 使用组合与继承

10.12 实现above、besidesh和toString

10.13 定义工厂方法
工厂方法应该放在何处？它们应该是单例对象成员还是类成员？应该怎么调用包含它们的对象或类？
一个直接的方法是创建Element类的伴生对象并把它作为布局元素的工厂方法。
使用这种方式，唯一要暴露给客户的就是Element的类/对象的组合，隐藏ArrayElement,LineElement和UniformElement三个类的实现.
在scala中，你可以在类和单例对象的内部定义其他的类和单例对象。因此一种让Element的子类私有化的方式就是把它们放在Element单例对象中并在那里声明它们为私有。

10.14 变高变宽

10.15 把代码都放在一起



